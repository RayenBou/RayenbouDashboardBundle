services:
  Rayenbou\DashboardBundle\Repository\ApiUserRepository:
    autowire: true
    tags: ["doctrine.repository_service"]

  Rayenbou\DashboardBundle\Repository\TicketRepository:
    autowire: true
    tags: ["doctrine.repository_service"]

  Rayenbou\DashboardBundle\Repository\TicketMessageRepository:
    autowire: true

    tags: ["doctrine.repository_service"]
  Rayenbou\DashboardBundle\State\TicketStateProcessor:
    autowire: true
    autoconfigure: true
    public: true
    tags: ["state.processor"]
  Rayenbou\DashboardBundle\State\PatchStateProcessor:
    autowire: true
    autoconfigure: true
    public: true
    tags: ["state.processor"]
  Rayenbou\DashboardBundle\State\TicketByTokenProvider:
    autowire: true
    autoconfigure: true
    public: true
    tags: ["state.provider"]
  Rayenbou\DashboardBundle\Command\SecurityCommand:
    tags:
      - { name: "console.command" }
  Rayenbou\DashboardBundle\Controller\TicketDashboardController:
    tags:
      - { name: "controller.service_arguments" }
      - { name: "container.service_subscriber" }
    public: true
    autowire: true
    autoconfigure: true
    # pour pouvoir injecter les service de l'abstract controller et utiliser ses methode
    # il ne faut pas preciser d'argument a la methode setContainer pour laisser l'injection de dependance
    # se faire automatiquement. il faut juste preciser un tableau vide
    calls:
      - method: setContainer
        arguments: [""]
